services:
  php:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    container_name: php
    volumes:
      - ./:/var/www/html
      - ./.docker/php/conf.d:/usr/local/etc/php/conf.d
    environment:
      PHP_CS_FIXER_IGNORE_ENV: 1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html/
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: learning_system
      MYSQL_USER: dev
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - app-network

  sonarscanner:
    image: sonarsource/sonar-scanner-cli
    container_name: sonarscanner
    depends_on:
      - sonarqube
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
    volumes:
      - ./:/usr/src
    working_dir: /usr/src
    networks:
      - app-network

volumes:
  db_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  app-network:
    driver: bridge